--***제약 조건

--**NOT NULL :  NULL값 입력 안됨.
DESC departments;

--**UK 유니크 : 중복되지 않음
--emp name은 NOT NULL 제약조건, email은 유니크 제약조건
CREATE TABLE emp1 (
    eno      NUMBER(3),
    emp_name VARCHAR2(20) CONSTRAINT emp1_ename_nn NOT NULL,
    email    VARCHAR2(30),
    CONSTRAINT emp1_email_uk UNIQUE (email)
);
--데이터 입력
INSERT INTO emp1
VALUES(208, 'Kim', 'KJS@naver.com');
INSERT INTO emp1
VALUES(209, NULL, 'ABC@naver.com'); --NOT NULL 제약조건 때문에 NULL값 입력 오류
INSERT INTO emp1
VALUES(210, 'Lee', 'KJS@naver.com'); --UNIQUE 제약조건 때문에 email값 입력 오류

--**Check 제약 조건
CREATE TABLE emp2 (
    eno      NUMBER(3),
    emp_name VARCHAR2(20),
    sal      NUMBER(10),
    CONSTRAINT emp2_sal_check CHECK(sal>1000)
);
INSERT INTO emp2
VALUES (208, 'Kim', 1200);
INSERT INTO emp2
VALUES (209, 'Lee', 900); -- CHECK 제약조건 (sal>1000) 제약조건 때문에 오류

--*제약조건 이름 없이 테이블 생성
DROP TABLE emp;
CREATE TABLE emp (
    eno    NUMBER(4) PRIMARY KEY,
    ename  VARCHAR2(20) NOT NULL,
    gno    VARCHAR2(13) UNIQUE CHECK (LENGTH(gno) >= 8),
    gender VARCHAR2(5) CHECK (gender IN('woman', 'man'))
);
INSERT INTO emp
VALUES(1, 'Kim', '12345678', 'man');
INSERT INTO emp
VALUES(2, 'Kim', '22345678', 'woman');
--예제 : members라는 새 테이블을 만든다.(제약 조건 이름은 생략)
CREATE TABLE members (
    member_id   NUMBER(2)     PRIMARY KEY,
    first_name  VARCHAR2(50)  NOT NULL,
    last_name   VARCHAR2(50)  NOT NULL,
    gender      VARCHAR2(2)   CHECK (gender IN('woman', 'man')),
    birth_day   DATE          DEFAULT SYSDATE,
    email       VARCHAR2(200) UNIQUE NOT NULL
);
DESC members;

--***제약조건 pk fk 기본키 외래키 관계
--부서 테이블 만들기
DROP TABLE 부서;
CREATE TABLE 부서(
    부서번호 NUMBER(4) PRIMARY KEY,
    부서이름 VARCHAR2(20)   
);
INSERT INTO 부서
VALUES (1, '개발');
SELECT * FROM 부서;

--*외래키 (FK)
--문법 : FOREIGN KEY(열 이름) REFERENCES 참조테이블(참조열) 
--옵션 : ON DELETE CASCADE, ON DELETE SET NULL
--ON DELETE CASCADE : 참조되는 부모테이블의 행에 대한 DELETE. 부모행이 지워지면 자식 행도 지워짐
--ON DELETE SET NULL : 부행이 지워지면 자식행은 NULL값으로 설정
DROP TABLE 직원;
CREATE TABLE 직원(
    직원번호 NUMBER(4) PRIMARY KEY,
    이름     VARCHAR2(20),
    월급     NUMBER(10),
    부서번호 NUMBER(4),
    FOREIGN KEY(부서번호) REFERENCES 부서(부서번호) ON DELETE SET NULL
);
--데이터 입력
INSERT INTO 부서 VALUES (1, '개발');
INSERT INTO 부서 VALUES (2, '경영');
INSERT INTO 부서 VALUES (3, '회계');
SELECT * FROM 부서;

INSERT INTO 직원 VALUES ( 100, '홍길동', 150, 1);
INSERT INTO 직원 VALUES ( 110, '사카', 100, 1);
INSERT INTO 직원 VALUES ( 120, '오바메양', 200, NULL); --외래키는 NULL값 입력됨
SELECT * FROM 직원;
--삭제시 문제 발생
DELETE FROM 부서 WHERE 부서번호 = 1; --현재 참조하는 외래키 열이 있어서 삭제가 안됨

--*제약조건 추가(1.테이블 생성 2.제약조건 추가)
CREATE TABLE 과목(
    과목번호 VARCHAR2(2),
    과목이름 VARCHAR2(50)
);
INSERT INTO 과목 VALUES ('01', '데이터베이스');
INSERT INTO 과목 VALUES ('02', '프로그래밍');
SELECT * FROM 과목;
--학생 테이블 생성
CREATE TABLE 학생(
    학번    VARCHAR2(4),
    이름    VARCHAR2(50),
    과목번호 VARCHAR2(2)
);
INSERT INTO 학생 VALUES ('0414', '스미스로우', '01');
INSERT INTO 학생 VALUES ('0415', '파티', '02');
INSERT INTO 학생 VALUES ('0416', '마갈량이스', '03');
SELECT * FROM 학생;
--1.과목부터 제약조건 추가
ALTER TABLE 과목
ADD PRIMARY KEY (과목번호);
--제약조건 조회(테이블 이름만 수정), 따옴표('테이블명') 안에 넣고, 대문자로 적어야함
SELECT * FROM ALL_CONSTRAINTS
WHERE TABLE_NAME = '과목';
--과목이름 열에 유니크 제약조건 추가
ALTER TABLE 과목
ADD UNIQUE (과목이름);
--2.학생 테이블 제약조건 추가
ALTER TABLE 학생
ADD PRIMARY KEY (학번);
ALTER TABLE 학생
MODIFY 이름 NOT NULL;--NOT NULL추가시 MODIFY '열이름' NOT NULL 순
--외래키 추가
ALTER TABLE 학생
ADD FOREIGN KEY (과목번호) REFERENCES 과목 (과목번호);

--**제약조건 삭제하기
ALTER TABLE 과목 DROP PRIMARY KEY; --불가 : 과목번호 기본키를 학생 테이블에서 참조중
--CASCADE 옵션으로 외래키 조건과 함께 삭제
ALTER TABLE 과목 DROP PRIMARY KEY CASCADE;
--제약 조건의 이름으로 삭제
ALTER TABLE 과목 DROP CONSTRAINT SYS_C007074;
--학생 테이블 제약조건 삭제
SELECT * FROM ALL_CONSTRAINTS
WHERE TABLE_NAME = '학생';
ALTER TABLE 학생 DROP CONSTRAINT SYS_C007075;
ALTER TABLE 학생 DROP CONSTRAINT SYS_C007076;

--*테이블에 열을 추가 / 수정 / 삭제
DROP TABLE 직원;
--서브쿼리로 테이블 카피
CREATE TABLE 직원 (직원번호, 이름, 급여, 부서번호)
AS SELECT employee_id, first_name, salary, department_id
FROM employees
WHERE department_id = 90; --90번 부서의 직원들
SELECT * FROM 직원;
--열 추가
ALTER TABLE 직원 ADD(성별 VARCHAR2(3));
ALTER TABLE 직원 ADD(커미션 NUMBER DEFAULT 0);
--열 수정(데이터 타입을 바꾸거나 용량을 늘릴 때)
DESC 직원;
ALTER TABLE 직원 MODIFY (성별 VARCHAR2(10));
ALTER TABLE 직원 MODIFY (성별 NUMBER);
--열 삭제
ALTER TABLE 직원
DROP COLUMN 성별;

--*테이블 이름 수정
RENAME 직원 TO 직원2;
DESC 직원2;














